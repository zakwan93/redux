{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst initialState = {\n  results: []\n};\n\nconst deleteResult = (state, action) => {\n  const updatedArr = state.results.filter(result => result.id !== action.resultElId);\n  return updateObject(state, {\n    results: updatedArr\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return updateObject(state, {\n        results: state.results.concat({\n          id: new Date().getMilliseconds(),\n          value: action.result\n        })\n      });\n\n    case actionTypes.DELETE_RESULT:\n      return deleteResult(state, action);\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/zakwan/Desktop/react_practice_projects/redux--basic/src/store/reducers/result.js"],"names":["actionTypes","updateObject","initialState","results","deleteResult","state","action","updatedArr","filter","result","id","resultElId","reducer","type","STORE_RESULT","concat","Date","getMilliseconds","value","DELETE_RESULT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAASC,YAAT,QAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,QAAMC,UAAU,GAAGF,KAAK,CAACF,OAAN,CAAcK,MAAd,CACjBC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcJ,MAAM,CAACK,UADd,CAAnB;AAGA,SAAOV,YAAY,CAACI,KAAD,EAAQ;AAAEF,IAAAA,OAAO,EAAEI;AAAX,GAAR,CAAnB;AACD,CALD;;AAOA,MAAMK,OAAO,GAAG,CAACP,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACO,IAAf;AACE,SAAKb,WAAW,CAACc,YAAjB;AACE,aAAOb,YAAY,CAACI,KAAD,EAAQ;AACzBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcY,MAAd,CAAqB;AAC5BL,UAAAA,EAAE,EAAE,IAAIM,IAAJ,GAAWC,eAAX,EADwB;AAE5BC,UAAAA,KAAK,EAAEZ,MAAM,CAACG;AAFc,SAArB;AADgB,OAAR,CAAnB;;AAOF,SAAKT,WAAW,CAACmB,aAAjB;AACE,aAAOf,YAAY,CAACC,KAAD,EAAQC,MAAR,CAAnB;AAVJ;;AAYA,SAAOD,KAAP;AACD,CAdD;;AAgBA,eAAeO,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  results: []\n};\n\nconst deleteResult = (state, action) => {\n  const updatedArr = state.results.filter(\n    result => result.id !== action.resultElId\n  );\n  return updateObject(state, { results: updatedArr });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return updateObject(state, {\n        results: state.results.concat({\n          id: new Date().getMilliseconds(),\n          value: action.result\n        })\n      });\n\n    case actionTypes.DELETE_RESULT:\n      return deleteResult(state, action);\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}