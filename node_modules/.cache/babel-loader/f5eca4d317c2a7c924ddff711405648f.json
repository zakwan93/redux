{"ast":null,"code":"import _objectSpread from \"/Users/zakwan/Desktop/react_practice_projects/redux--basic/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"./actions\";\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    case actionTypes.INC_BY_5:\n      return _objectSpread({}, state, {\n        counter: state.counter + action.value\n      });\n\n    case actionTypes.DEC_BY_5:\n      return _objectSpread({}, state, {\n        counter: state.counter - action.value\n      });\n\n    case actionTypes.STORE_RESULT:\n      return _objectSpread({}, state, {\n        results: state.results.concat({\n          id: new Date(),\n          value: state.counter\n        })\n      });\n\n    case actionTypes.DELETE_RESULT:\n      const updatedArr = state.results.filter(result => result.id !== action.resultElId);\n      return _objectSpread({}, state, {\n        results: updatedArr\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/zakwan/Desktop/react_practice_projects/redux--basic/src/store/reducer.js"],"names":["actionTypes","initialState","counter","results","reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","INC_BY_5","value","DEC_BY_5","STORE_RESULT","concat","id","Date","DELETE_RESULT","updatedArr","filter","result","resultElId"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,WAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;;AAKA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,SAAjB;AACE,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACP,OAAT,GAAmBG,KAAK,CAACH,OAAN,GAAgB,CAAnC;AACA,aAAOO,QAAP;;AACF,SAAKT,WAAW,CAACY,SAAjB;AACE,+BACKP,KADL;AAEEH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB;AAF3B;;AAIF,SAAKF,WAAW,CAACa,QAAjB;AACE,+BACKR,KADL;AAEEH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACQ;AAFlC;;AAIF,SAAKd,WAAW,CAACe,QAAjB;AACE,+BACKV,KADL;AAEEH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACQ;AAFlC;;AAIF,SAAKd,WAAW,CAACgB,YAAjB;AACE,+BACKX,KADL;AAEEF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqB;AAAEC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAN;AAAkBL,UAAAA,KAAK,EAAET,KAAK,CAACH;AAA/B,SAArB;AAFX;;AAIF,SAAKF,WAAW,CAACoB,aAAjB;AACE,YAAMC,UAAU,GAAGhB,KAAK,CAACF,OAAN,CAAcmB,MAAd,CACjBC,MAAM,IAAIA,MAAM,CAACL,EAAP,KAAcZ,MAAM,CAACkB,UADd,CAAnB;AAGA,+BACKnB,KADL;AAEEF,QAAAA,OAAO,EAAEkB;AAFX;AA7BJ;;AAkCA,SAAOhB,KAAP;AACD,CApCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"./actions\";\n\nconst initialState = {\n  counter: 0,\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n    case actionTypes.DECREMENT:\n      return {\n        ...state,\n        counter: state.counter - 1\n      };\n    case actionTypes.INC_BY_5:\n      return {\n        ...state,\n        counter: state.counter + action.value\n      };\n    case actionTypes.DEC_BY_5:\n      return {\n        ...state,\n        counter: state.counter - action.value\n      };\n    case actionTypes.STORE_RESULT:\n      return {\n        ...state,\n        results: state.results.concat({ id: new Date(), value: state.counter })\n      };\n    case actionTypes.DELETE_RESULT:\n      const updatedArr = state.results.filter(\n        result => result.id !== action.resultElId\n      );\n      return {\n        ...state,\n        results: updatedArr\n      };\n  }\n  return state;\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}